* Manjaro工作环境配置
** 安装Manjaro系统
   按默认分区方案，比较懒。
** 换国内源
   配置国内镜源
   #+begin_src shell
     sudo pacman-mirrors -i -c China -m rank
   #+end_src
   
   设置archlinuxcn源，antergos源，arch4edu源：
   #+begin_src shell
     [archlinuxcn]
     SigLevel = TrustAll
     #中科大源
     Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch
     #清华源
     Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch

     [antergos]
     SigLevel = TrustAll
     Server = https://mirrors.tuna.tsinghua.edu.cn/antergos/$repo/$arch

     [arch4edu]
     SigLevel = TrustAll
     Server = https://mirrors.tuna.tsinghua.edu.cn/arch4edu/$arch
   #+end_src
   
   更新源列表
   #+begin_src shell
     sudo pacman-mirrors -g
   #+end_src
   
   更新pacman数据库并全面更新系统
   #+begin_src shell
     sudo pacman -Syyu
   #+end_src
   
   防止PGP签名错误
   #+begin_src shell
     sudo pacman -S archlinuxcn-keyring
     sudo pacman -S antergos-keyring
   #+end_src
   
   安装base-devel
   #+begin_src shell
     sudo pacman -S base-devel
   #+end_src
** 安装Google-Chrome
   #+begin_src shell
     sudo pacman -S google-chrome
   #+end_src
   
   直接开启同步功能安装好所有的插件。
** 安装qv2ray
   安装qv2ray，科学上网使用。
   #+begin_src shell
     sudo pacman -S qv2ray v2ray
     sudo pacman -S proxychains
   #+end_src
   
   proxychains代理设置，编辑 ~/etc/proxychains.conf~ 
   #+begin_src text
     socks5  127.0.0.1 1089
   #+end_src
** 安装fish shell
   安装fish shell
   #+begin_src shell
     sudo pacman -S fish
     chsh -s /usr/bin/fish

     proxychains curl -L https://get.oh-my.fish | fish

     omf install lambda
   #+end_src
   
** 将dotfiles迁移到工作电脑
   #+begin_src shell
     # 设置git提交的邮箱和姓名
     git config --global user.email "devinkin@163.com"
     git config --global user.name "devinkin"

     # 设置远程仓库的配置
     ssh-keygen -t rsa

     # 避免循环checkout问题
     echo "Manjaro-dotfiles" >> ~/.gitignore

     # 将准备好的配置文件拉下来
     git clone --bare git@github.com:DevinKin/Manjaro-dotfiles.git $HOME/Manjaro-dotfiles

     # 使用别名管理dotfiles
     alias dotfiles='/usr/bin/git --git-dir=$HOME/Manjaro-dotfiles --work-tree=$HOME'

     # dotfiles status不显示尚未add的文件
     dotfiles config --local status.showUntrackedFiles no

     # 从空仓库中将实际的配置文件拉到$HOME
     dotfiles checkout
   #+end_src
** 安装输入法
   安装fcitx和rime输入法
   #+begin_src shell
     sudo pacman -S fcitx-im #安裝全部fcitx組件
     sudo pacman -S fcitx-rime #安裝rime
     sudo pacman -S fcitx-configtool #安裝fcitx圖形管理工具
   #+end_src
   
   编辑 ~.xprofile~ 添加如下环境变量。 
   #+begin_src text
     export GTK_IM_MODULE=fcitx
     export QT_IM_MODULE=fcitx
     export XMODIFIERS="@im=fcitx"
   #+end_src
** 开发环境搭建
*** Emacs
    #+begin_src shell
      # 拉取自己的emacs配置
      git clone git@github.com:DevinKin/.emacs.d.git

      # 拉取emacs的site-lisp
      git clone https://github.com/manateelazycat/company-english-helper.git site-lisp/company-english-helper

      git clone https://github.com/manateelazycat/emacs-application-framework.git site-lisp/emacs-application-framework

      # 如果想要添加其他的site-lisp可以执行以下命令
      git clone <repo link> site-lisp/<repo name>
      git submodule add <repo link> site-lisp/<repo name>

      # 安装emacs及emacs的相关依赖
      sudo pacman -S yay
      yay --aururl "https://aur.tuna.tsinghua.edu.cn" --save
      yay -P -g
      yay -S python-pyqt5 python-pyqt5-sip python-pyqtwebengine python-qrcode python-feedparser python-dbus python-pyinotify python-markdown nodejs aria2 libreoffice python-grip filebrowser-bin
      sudo pacman -R python-pymupdf
      pip uninstall fitz
      pip install pymupdf

      sudo pacman -S the_silver_searcher
      sudo pacman -S emacs

      # 启动emacs

    #+end_src
*** Clojure
    安装Clojure相关开发环境
    #+begin_src shell
      sudo pacman -S jdk11-openjdk clojure rlwrap leiningen maven 

      yay -S clojure-lsp
    #+end_src
*** Golang
    安装Go，nodejs和unzip用于dap-go安装的依赖
    #+begin_src shell
      sudo pacman -S go nodejs unzip
    #+end_src
    
    设置环境变量
    #+begin_src text
      export GO111MODULE=auto
      export GOPROXY=https://goproxy.cn
      export GOROOT=/usr/lib/go
      export GOPATH=$HOME/go 
      export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
    #+end_src
    
    安装go相关工具
    #+begin_src shell
      # 安装gopls，emacs补全使用
      goget golang.org/x/tools/gopls@latest
      # 安装dlv，golang debug工具
      goget github.com/go-delve/delve/cmd/dlv
    #+end_src
*** Python
    安装dotnet-sdk-2.2
    #+begin_src shell
      # 安装dotnet sdk
      yay -S dotnet-sdk-2.2 dotnet-runtime-2.2
    #+end_src
    
    安装microsoft-python-language-server
    #+begin_src shell
      yay -S microsoft-python-language-server
    #+end_src
** 安装各种软件
   #+begin_src shell
     # 安装wps
     sudo pacman -S wps-office-cn ttf-wps-fonts

     # 安装网易云音乐
     yay -S netease-cloud-music

     # 安装deepin截图工具
     yay -S deepin-screenshot gpaste
     # 设置截图快捷键
     # System Settings - Shortcuts - Custom Shortcuts - Edit - New - Global Shortcut - Command/URL - 命名为Screenshots
     # 在Trigger添加：Ctrl+Alt+A
     # 在Action添加：deepin-turbo-invoker --type=dtkwidget deepin-screenshot --icon
     # 与原有的一个快捷键设置冲突，Reassign来确认新的设置。

     # 安装微信
     yay -S deepin-wine-wechat

     # 安装tmux，使用教程可看下面的链接：http://louiszhai.github.io/2017/09/30/tmux/
     yay -S tmux

     # 安装百度网盘
     yay -S baidunetdisk 
   #+end_src
** 修复小问题
   启动时grub无法显示
   #+begin_src shell
     sudo vim /etc/default/grub
     # 将下面属性修改为menu
     GRUB_TIMEOUT_STYLE=menu

     sudo update-grub
   #+end_src
   
   如果出现闪屏的情况，可以去系统设置-工作空间行为-桌面特效-模糊，点击关闭。
** 存储dotfiles
   在虚拟机中，预装好自己的Manjaro工作环境配置，进行如下操作
   #+begin_src shell
     # 初始化一个空仓库路径
     git init --bare $HOME/Manjaro-dotfiles

     # 使用别名管理dotfiles
     alias dotfiles='/usr/bin/git --git-dir=$HOME/Manjaro-dotfiles --work-tree=$HOME'

     # dotfiles status不显示尚未add的文件
     dotfiles config --local status.showUntrackedFiles no

     # 后续保存某些配置文件
     dotfiles add .bashrc
     dotfiles commit -m ".bashrc"
     dotfiles pusn origin master
   #+end_src


   
